name: CI/CD Pipeline for Hacker News Backend

on:
  push:
    branches:
      - main # Adjust if your default branch is different (e.g., master)

env:
  # IMAGE_NAME: The name of your application's Docker image
  IMAGE_NAME: hacker-news-backend
  # DO_REGISTRY_NAME: Your DigitalOcean Container Registry name (e.g., your-registry-name)
  # This will be pulled from GitHub secrets: secrets.DO_REGISTRY_NAME
  # K8S_MANIFEST_DIR: Path to your Kubernetes manifest files
  K8S_MANIFEST_DIR: hacker-news/backend/k8s

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions: # Needed for docker/login-action if using OIDC, but PAT is used here.
      contents: read
      packages: write # If pushing to GitHub Packages, not DOCR here.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITAL_OCEAN }}
          password: ${{ secrets.DIGITAL_OCEAN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./hacker-news/backend # Path to your Dockerfile
          push: true
          tags: |
            registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:latest
            registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # Optional: Add build arguments if needed
          # build-args: |
          #   ARG_NAME=value

  deploy:
    name: Deploy to DigitalOcean Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push # Ensure build-and-push job completes successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN }}

      - name: Save DigitalOcean kubeconfig
        # Replace YOUR_K8S_CLUSTER_NAME with the name or ID of your DOKS cluster
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.DO_K8S_CLUSTER_NAME }}

      - name: Update Kubernetes manifests with new image tag
        # This step updates the image tag in your Kubernetes deployment files.
        # It replaces the placeholder 'registry.digitalocean.com/YOUR_DO_REGISTRY_NAME/hacker-news-backend:latest'
        # with the specific commit-sha-tagged image.
        # For more robust manifest management, consider using Kustomize.
        run: |
          cd ${{ env.K8S_MANIFEST_DIR }}
          echo "Updating Kubernetes manifests in $(pwd) to use image tag: ${{ github.sha }}"

          # The image placeholder used in your current k8s YAML files is:
          # registry.digitalocean.com/YOUR_DO_REGISTRY_NAME/hacker-news-backend:latest
          # The target image will be:
          # registry.digitalocean.com/SECRET_REGISTRY_NAME/IMAGE_NAME:COMMIT_SHA

          for K8S_FILE in deployment.yaml consumer-fetch-stories-deployment.yaml consumer-update-stats-deployment.yaml; do
            echo "Processing $K8S_FILE..."
            # Escape slashes for sed and use a different delimiter for clarity
            sed -i "s#registry.digitalocean.com/YOUR_DO_REGISTRY_NAME/hacker-news-backend:latest#registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}#g" $K8S_FILE
            echo "Updated $K8S_FILE."
          done

          echo "Verification of updated deployment.yaml:"
          cat deployment.yaml

      - name: Deploy to DOKS
        run: kubectl apply -f ${{ env.K8S_MANIFEST_DIR }}/
